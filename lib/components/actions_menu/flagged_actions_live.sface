<div aria-haspopup="true" class="dropdown dropdown-end feed_activity relative">
  <button tabindex="0" class="btn btn-neutral btn-sm">
    <#Icon iconify="game-icons:heart-plus" class="w-5 h-5 stroke-1" />
    {l("Mediate")}
  </button>
  <ul
    tabindex="0"
    class="!block w-72 mt-2 z-[910] dropdown-content p-0.5 menu shadow-xl bg-base-100 border rounded border-base-content/20 dropdown_actions"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="more-menu"
  >
    <li :if={e(@activity, :subject, :id, nil) &&
      current_user_id(@__context__) != e(@activity, :subject, :id, nil)}>
      <Bonfire.UI.Common.SmartInputButtonLive
        create_object_type={:message}
        smart_input_opts={%{
          create_object_type: :message,
          to_circles: [
            %{
              ed(@activity, :subject, :character, :username, "") =>
                id(e(@activity, :subject, :character, :id, nil))
            }
          ]
        }}
        prompt={l("Message the flagger")}
        icon="heroicons-solid:mail"
        class="!flex items-center gap-2 text-sm"
      />
    </li>

    <li :if={current_user_id(@__context__) != id(flagged_character(@object || @activity)) &&
      e(flagged_character(@object || @activity), :id, nil) != e(@activity, :subject, :id, nil)}>
      <div class="">
        <Bonfire.UI.Common.SmartInputButtonLive
          create_object_type={:message}
          smart_input_opts={%{
            create_object_type: :message,
            to_circles: [
              %{
                id(e(flagged_character(@object), nil)) =>
                  e(flagged_character(@object || @activity), :username, nil)
              }
            ]
          }}
          prompt={l("Message the original author")}
          icon="heroicons-solid:mail"
          class="!flex items-center gap-2 text-sm"
        />
      </div>
    </li>

    {#case e(@activity, :tree, :parent_id, nil)}
      {#match nil}
      {#match context_id}
        <li class="" />
        <li>
          <Bonfire.UI.Common.OpenModalLive id={"remove_post_#{e(@object, :id, "")}"} no_actions>
            <div>
              <h3 class="font-bold text-center text-lg">{l("Confirm you want to remove this post from the group")}!</h3>
              <button
                phx-click="Bonfire.Social.Flags:unpublish"
                phx-target={"##{@activity_component_id || "root"}"}
                phx-value-id={e(@object, :id, "")}
                phx-value-context={context_id}
                phx-value-subject={e(@activity, :subject, :id, "")}
                data-role="unpublish"
                class="btn w-full btn-error rounded-full normal-case mt-3"
              >{l("Remove")}</button>
            </div>

            <:open_btn>
              <div class="py-1">
                {l("Remove this post from the group")}
              </div>
            </:open_btn>
          </Bonfire.UI.Common.OpenModalLive>
        </li>

        <li>
          <Bonfire.UI.Common.OpenModalLive id={"escalate_#{e(@object, :id, "")}"} no_actions>
            <div>
              <h3 class="font-bold text-center text-lg">{l("Confirm you want to remove this post from the group")}!</h3>
              <button
                phx-click="Bonfire.Social.Feeds:publish"
                phx-target={"##{@activity_component_id || "root"}"}
                phx-value-to="instance_moderators"
                phx-value-id={id(@activity)}
                data-role="escalate"
                class="btn w-full btn-info rounded-full normal-case mt-3"
              >{l("Escalate to instance moderators")}</button>
            </div>

            <:open_btn>
              <div class="py-1">
                {l("Escalate to instance moderators")}
              </div>
            </:open_btn>
          </Bonfire.UI.Common.OpenModalLive>
        </li>
    {/case}
  </ul>
</div>

<div aria-haspopup="true" class="dropdown dropdown-end feed_activity relative">
  <button tabindex="0" class="btn btn-neutral btn-sm">
    <#Icon iconify="heroicons-solid:ban" class="w-5 h-5 stroke-1" />
    {l("Take action")}
  </button>
  <ul
    tabindex="0"
    class="!block w-72 z-[910] relative dropdown-content  p-0.5 menu shadow-lg bg-base-100 shadow-xl border border-base-content/20 rounded-lg dropdown_actions"
    role="menu"
    aria-orientation="vertical"
    aria-labelledby="more-menu"
  >
    {#if @object_type != Bonfire.Data.Identity.User}
      {!-- Hide the object --}
      {!-- 
            # WIP - TODO: pass the silenced/ghosted/blocked booleans so it isn't re-queried by BlockButtonLive before enabling:

        --}

      <li>
        <StatelessComponent
          module={maybe_component(Bonfire.Boundaries.Web.BlockButtonLive, @__context__)}
          parent_id={@activity_component_id || id(@activity)}
          object={id(@object)}
          label={l("this %{object}", object: e(@object_type_readable, l("object")))}
          scope={e(@activity, :tree, :parent, nil) || e(@activity, :tree, :parent_id, nil)}
          type={:hide}
          class="flex items-center w-full gap-2 text-sm"
          with_icon
        />
      </li>

      <li>
        <StatelessComponent
          module={maybe_component(Bonfire.UI.Social.Activity.DeleteObjectLive, @__context__)}
          object={@object}
          icon_class="w-4 h-4 stroke-1 text-base-content/70"
          creator_id={Bonfire.UI.Social.Activity.MoreActionsLive.creator_or_subject_id(@activity, @object)}
          object_type_readable={@object_type_readable}
          parent_id={id(@activity)}
          open_btn_class="flex items-center w-full gap-2 text-sm"
        />
      </li>
    {/if}
    <li>
      <StatelessComponent
        module={maybe_component(Bonfire.Boundaries.Web.BlockButtonLive, @__context__)}
        parent_id={@activity_component_id || id(@activity)}
        object={flagged_subject(@object || @activity)}
        peered={e(flagged_subject(@object || @activity), :peered, nil)}
        scope={e(@activity, :tree, :parent, nil) || e(@activity, :tree, :parent_id, nil)}
        label={l("the original author")}
        type={:block}
        class="flex items-center w-full gap-2 text-sm"
        with_icon
      />
    </li>
    <li>
      {!-- Block the flagger --}
      <StatelessComponent
        module={maybe_component(Bonfire.Boundaries.Web.BlockButtonLive, @__context__)}
        parent_id={@activity_component_id || id(@activity)}
        object={e(@activity, :subject, nil)}
        peered={e(@activity, :subject, :peered, nil)}
        scope={e(@activity, :tree, :parent, nil) || e(@activity, :tree, :parent_id, nil)}
        label={l("the flagger")}
        type={:block}
        class="flex items-center w-full gap-2 text-sm"
        with_icon
      />
    </li>
  </ul>
</div>

<button
  phx-click="Bonfire.Social.Flags:unflag"
  phx-target={"##{@activity_component_id || "root"}"}
  phx-value-id={e(@object, :id, "")}
  phx-value-context={e(@activity, :tree, :parent_id, nil)}
  data-role="unflag"
  title={l("Unflag")}
  phx-value-subject={e(@activity, :subject, :id, "")}
  class="flex btn btn-neutral btn-sm"
>
  <#Icon iconify="fluent:flag-off-16-filled" class="w-5 h-5 stroke-1" />
  <span class="">{l("Unflag")}</span>
</button>

{!-- <LinkLive 
      to={@permalink}
    >
      <button
        class="normal-case btn btn-sm">
        {l "View"}
      </button>
    </LinkLive> --}
{!-- <Bonfire.UI.Social.Activity.MoreActionsLive
      object={@object} 
      object_type={@object_type} 
      activity={@activity} 
      verb={@verb}
      object_type_readable={@object_type_readable}
      showing_within={@showing_within}
    >

      <:extra_items>

      </:extra_items>
    </Bonfire.UI.Social.Activity.MoreActionsLive> --}
